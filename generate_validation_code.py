def generate_validation_code(order_code):
    hundreds = { '0' : ["00", "00"],
             '1' : ["90", "00"],
             '2' : ["80", "01"],
             '3' : ["70", "02"],
             '4' : ["60", "03"],
             '5' : ["50", "04"],
             '6' : ["40", "05"],
             '7' : ["30", "06"],
             '8' : ["20", "07"],
             '9' : ["10", "08"], }
    
    #short code is used to easily reference relevant digits of the order code
    order_code = str(order_code)
    short_code = order_code[:1] + order_code[-3:]

    #QUARTER 1
    #Find which hundred the order code belongs to
    q1 = str(int(hundreds[short_code[1]][0]) + 9 * (int(short_code[-3:]) % 10))
    if int(q1) < 10:
        q1 = "0" + str(q1)

    #QUARTER 2
    q2 = str(short_code[0]) + str(short_code[1])

    #QUARTER 3
    q3 = int(hundreds[short_code[1]][1])

    if short_code[1] != 0:
        ratio_L = int(short_code[1]) + 1
        ratio_R = 10 - ratio_L
    else:
        ratio_L = 10
        ratio_R = 0
    
    q, r = divmod(int(order_code[-2:]), 10)

    q3 += (9 * q)
    for i in range(1, r):
        if i == ratio_L-1:
            q3 += 1

    if q3 < 10:
        q3 = "0" + str(q3)
    
    q3 = str(q3)

    #QUARTER 4
    q4 = short_code[-2:]

    #Return last two digits of each quarter
    return(q1[-2:]+q2[-2:]+q3[-2:]+q4[-2:])

if (__name__ == "__main__"):
    while True:
        inp = input("Enter a code: ")
        print(generate_validation_code(inp))



